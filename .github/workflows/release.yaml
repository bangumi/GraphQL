name: release

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      IMAGE: 'ghcr.io/${{ github.repository_owner }}/graphql'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - run: |
          export "TAG_HASH=2-${LONG_TAG:0:10}"

          if ! docker pull "${IMAGE}:base-${TAG_HASH}"; then
            echo "build base docker image"
            docker build -t "${IMAGE}:base-${TAG_HASH}" -f etc/base.dockerfile .
            docker push "${IMAGE}:base-${TAG_HASH}"
          fi

          docker tag "${IMAGE}:base-${TAG_HASH}" base-image

        env:
          LONG_TAG: "${{ hashFiles('yarn.lock') }}"
        name: build base docker image

      - run: echo "REF=$(git describe --match='v*')" >> $GITHUB_ENV

      - name: docker build
        run: docker build --build-arg "ARG_REF=${REF}" -t current -f etc/main.dockerfile .

      - if: "${{ !startsWith(github.ref, 'refs/tags/') }}"
        name: push master
        run: |
          docker tag current "${IMAGE}:master"
          docker push "${IMAGE}:master"

      - name: push latest tag
        if: "${{ startsWith(github.ref, 'refs/tags/') }}"
        run: |
          export "VERSION=v$(cat package.json | jq .version -r)"
          docker tag current "${IMAGE}:latest"
          docker tag current "${IMAGE}:${VERSION}"
          docker push "${IMAGE}:latest"
          docker push "${IMAGE}:${VERSION}"

      - name: push described tag
        run: |
          docker tag current "${IMAGE}:${REF}"
          docker push "${IMAGE}:${REF}"
